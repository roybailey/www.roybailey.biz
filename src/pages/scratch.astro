---
import Layout from '@/layouts/Layout.astro';
import { getCollection, getEntry } from 'astro:content';
import {Accordion, AccordionItem} from "free-astro-components";

// Get all entries from a collection.
// Requires the name of the collection as an argument.
const allJobs = await getCollection('jobs');
const allSkills = await getCollection('skills');
const allCountries = await getCollection('countries');

// Get a single entry from a collection.
// Requires the name of the collection and `id`
const kotlin = await getEntry('skills', 'kotlin');
const ubs2021 = await getEntry('jobs', 'UBS-2021');
const UK = await getEntry('countries', 'GBR');

const resumes = await getCollection('resumes');
const employmentHistory = await getCollection('employmentHistory');
const rb = await getEntry('resumes', 'roybailey');
const employmentUBS20210201 = await getEntry('employmentHistory','2021-02-01-ubs');

---

<Layout>

	<Accordion variant='shadow' class="w-full">
		<AccordionItem title="Accordion">
			Something
		</AccordionItem>
	</Accordion>

		<div class="bg-slate-300 m-4 p-4">
		<h1>resumes ({resumes?.length})</h1>
		<ul>
			{resumes.map((cv) => (
				<li class="m-4 shadow" key={cv.id}>
					<h2>({cv.id}) - {cv.data.name}</h2>
					<p>{cv.data.tagline}</p>
				</li>
			))}
		</ul>
		<div class="text-foreground bg-background m-4 p-4">
			<h1>resumes[roybailey]</h1>
			<ul>
				<li class="m-4 shadow">name={rb.data.name}</li>
				<li class="m-4 shadow">tagline={rb.data.tagline}</li>
			</ul>
		</div>
	</div>
	<hr />

	<div class="bg-slate-300 m-4 p-4">
		<div class="text-foreground bg-background m-4 p-4">
			<h1>employmentHistory ({employmentHistory?.length})</h1>
			<ul>
				{employmentHistory.map((job) => (
					<li class="m-4 shadow" key={job.id}>
						<h2 class="font-semibold">{job.id}</h2>
						<h2>{job.data.position} at {job.data.company}</h2>
						<p>{job.data.startDate} - {job.data.endDate || "Present"}</p>
						<p>{job.data.description}</p>
					</li>
				))}
			</ul>
			<p>employmentHistory[2025-03-01-UBS]={employmentUBS20210201?.data.position}</p>
		</div>
	</div>
	<hr />

	<div class="bg-slate-300 m-4 p-4">
		<div class="text-foreground bg-background m-4 p-4">
			<h1>allJobs ({allJobs?.length})</h1>
			<ul>
				{allJobs.map((job) => (
					<li class="m-4 shadow" key={job.id}>
						<h2>{job.data.title}</h2>
					</li>
				))}
			</ul>
		</div>
	</div>
	<hr />

	<div class="bg-slate-300 m-4 p-4">
		<div class="text-foreground bg-background m-4 p-4">
			<h1>jobs[UBS-2021] = {ubs2021?.id}:{ubs2021?.data.title}</h1>
		</div>
	</div>
	<hr />

	<div class="bg-slate-300 m-4 p-4">
		<div class="text-foreground bg-background m-4 p-4">
			<h1>allSkills ({allSkills?.length})</h1>
			<ul>
				{allSkills.map(skill => (
					<li class="m-4 shadow" key={skill.id}>
						<h2>{skill.data.title}</h2>
					</li>
				))}
			</ul>
		</div>
	</div>
	<hr />

	<div class="bg-slate-300 m-4 p-4">
		<div class="text-foreground bg-background m-4 p-4">
			<h1>skills[Kotlin] = {kotlin?.id}:{kotlin?.data.level}</h1>
		</div>
	</div>
	<hr />

	<div class="bg-slate-300 m-4 p-4">
		<div class="text-foreground bg-background m-4 p-4">
			<h1>allCountries ({allCountries?.length})</h1>
			<ul>
				{allCountries
					.filter(country => ["USA","GBR"].indexOf(country.id) > -1)
					.map(country => (
						<li class="m-4 shadow" key={country.id}>
							<h2>{country.data.name}</h2>
						</li>
					))}
			</ul>
			<p>allCountries[GBR]={UK?.data.name}</p>
		</div>
	</div>
	<hr />

</Layout>
